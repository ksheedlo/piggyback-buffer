/**
 * @preserve
 * piggyback-buffer v1.0.0
 * Made with passion and fire by @kensheedlo
 * License: MIT
 */
+function(){"use strict";function e(e){return e===void 0}function t(e,t){if(!e.isPending(t)){throw new Error("[PiggybackBuffer:notpending] Tried to resolve or reject "+"a nonexistent buffered request for key: "+t)}}function f(){this.$$buffer={}}function n(e){return e!==null&&e.resolve&&typeof e.resolve==="function"&&e.reject&&typeof e.reject==="function"}function o(e,t){if(n(e)){e.resolve(t)}else{e(null,t)}}function r(e,t){if(n(e)){e.reject(t)}else{e(t)}}f.prototype.queue=function(t,f){if(e(this.$$buffer[t])){this.$$buffer[t]=[]
}this.$$buffer[t].push(f)};f.prototype.resolve=function(e,f){t(this,e);this.$$buffer[e].forEach(function(e){o(e,f)});delete this.$$buffer[e]};f.prototype.reject=function(e,f){t(this,e);this.$$buffer[e].forEach(function(e){r(e,f)});delete this.$$buffer[e]};f.prototype.isPending=function(t){return!e(this.$$buffer[t])};if(module){module.exports=f}window.PiggybackBuffer=f}();
//# sourceMappingURL=dist/piggyback-buffer.min.js.map